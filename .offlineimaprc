[general]
pythonfile = ~/.offlineimap/offlineimap_scripts.py
# List of accounts to be synced, separated by a comma.
accounts = formal, school, personal

[mbnames]
enabled = yes
filename = ~/.mutt/mailboxes
header = "mailboxes "
peritem = "+%(accountname)s/%(foldername)s"
sep = " "
footer = "\n"

# ---------------------------------------
# Personal Email
# ---------------------------------------

[Account personal]
# Identifier for the local repository; e.g. the maildir to be synced via IMAP.
localrepository = personal-local
# Identifier for the remote repository; i.e. the actual IMAP, usually non-local.
remoterepository = personal-remote

[Repository personal-local]
# OfflineIMAP supports Maildir, GmailMaildir, and IMAP for local repositories.
type = Maildir
# Where should the mail be placed?
localfolders = ~/Mail/personal

[Repository personal-remote]
# Remote repos can be IMAP or Gmail, the latter being a preconfigured IMAP.
type = Gmail
remoteuser = mrochford45@gmail.com
#remotepasseval = decrypt("~/.password-store/mutt/personal.gpg")
remotepasseval = pass_show("mutt/personal")

sslcacertfile = /etc/ssl/certs/ca-certificates.crt
ssl_version = tls1_2

# ---------------------------------------
# Formal Email
# ---------------------------------------

[Account formal]
localrepository = formal-local
remoterepository = formal-remote

[Repository formal-local]
type = Maildir
localfolders = ~/Mail/formal

[Repository formal-remote]
type = Gmail
remoteuser = mattjohnrochford@gmail.com
#remotepasseval = decrypt("~/.password-store/mutt/formal.gpg")
remotepasseval = pass_show("mutt/formal")

sslcacertfile = /etc/ssl/certs/ca-certificates.crt
ssl_version = tls1_2

# ---------------------------------------
# UW Email
# ---------------------------------------

[Account school]
localrepository = school-local
remoterepository = school-remote

[Repository school-local]
type = Maildir
localfolders = ~/Mail/school

[Repository school-remote]
type = Gmail
remoteuser = mattjr@uw.edu
#remotepasseval = decrypt("~/.password-store/mutt/school.gpg")
remotepasseval = pass_show("mutt/school")

sslcacertfile = /etc/ssl/certs/ca-certificates.crt
ssl_version = tls1_2
