# -- general -------------------------------------------------------------------

# set -g default-terminal "screen256-xterm" # colors!
# set -g terminal-overrides "screen.xterm-new"
setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 300                   # increase repeat timeout
set -s focus-events on

set -g prefix2 C-a                        # GNU-Screen compatible prefix
bind C-a send-prefix -2

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 5000                 # boost history

# reload configuration
bind r source-file ~/.config/tmux/tmux.conf \; display 'tmux.conf sourced'

# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on
set -g set-titles-string "#S"
set -g status-interval 10     # redraw status line every 10 seconds

# activity
set -g monitor-activity on
set -g visual-activity off

# -PLUGINS-
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @yank_action 'copy-pipe'
set -g @yank_selection 'clipboard'
set -g @yank_selection_mouse 'clipboard'
set -g -s set-clipboard on


# -- navigation ----------------------------------------------------------------

# force Vi mode
#   really you should export VISUAL or EDITOR environment variable, see manual
set -g status-keys vi
set -g mode-keys vi
set -g mouse on

set-window-option -g mode-keys vi

# Use vi mode for pane selection
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# Use vi mode for pane resize
bind -r H resize-pane -L 4
bind -r J resize-pane -D 4
bind -r K resize-pane -U 4
bind -r L resize-pane -R 4

# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'

# create session
bind C-c new-session -c '#{pane_current_path}'

bind c new-window -c '#{pane_current_path}'

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# split current window horizontally
bind - split-window -v  -c '#{pane_current_path}'
# split current window vertically
bind _ split-window -h -c '#{pane_current_path}'

# pane navigation
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# window navigation
unbind p
unbind n
bind -r p previous-window # select previous window
bind -r n next-window     # select next window
bind Tab last-window        # move to last active window

# End Session
bind C-x kill-session

# -- buffers -------------------------------------------------------------------

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

set -g status 'on'
set -g status-style fg=colour3
set -g status-justify 'left'
set -g pane-border-style fg=colour0
set -g pane-active-border-style fg=colour3


# set -g window-status-separator ' '
# set -g window-status-current-style 'bright bg=default fg=black'
# set -g window-status-format 'î‚¶#[bg=black]#[fg=yellow] #I #W #[fg=black]#[bg=default]î‚´'
# set -g window-status-current-format '#[fg=blue]î‚¶#[bg=black]#[fg=yellow] #W #[fg=black]#[bg=default]î‚´'
set -g window-status-format '[#I:#W - #T]'
set -g window-status-current-format '[*:#W - #T]'

set -g status-left ' [#S] #{?client_prefix,ðŸ”¶,}'
set -g status-right "#(date +%H:%M)"
